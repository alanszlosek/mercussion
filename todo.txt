- cross noteheads on snare rim clicks

- grr, a better way to do simultaneous is needed, especially with RH on rim, LH on snare type setup

- some dynamic changes in grahvy aren't coming across


REDESIGN CONSIDERATIONS
- pass note structure into methods by reference?
	- removes need for ret.update(a)
	- then we can go back to returning True or False (stop looping, looking for more modifiers/notes)

- allow simultaneous notes to share modifiers

- parse time signatures
	- pain in the ass with the current regex setup. need to be able to easily define regexes, but also define a collection of regexes, for more concise code in the parser

- make sure: [abc][abc]r (triplet) works with lilypond output
	- this is going to be tricky
	- don't think i need in-beat tuplets, just interbeat tuplets

- interbeat tuplets
	- arg.
	- what if we simply set a flag when we hit '[': startsTuplet
	- we'd have to go back one note to decorate a note with endsTuplet when we hit ']'
	h h 2[hhhhh:rrrll hhhhh:rrrll h] | h

- sub-beat tuplets
	- h[hhh]h (recurse and subdivide somehow?)
	- h..hhhh..


OTHER

- real midi output
	- midicomp maps c4 and other notes to midi instruments that seem to be 2 octaves too low. check svg in reference
	- what does the track instrument volume do again?

- musicxml
	- instrument names
	- unisons
	- dynamic changes
		- think this is done

- push dynamics to lilypond even on rest notes

- maybe switch from time signature at the end, to requiring it to be specified in the first measure
	- but then we have to declare it multiple times
	- ok, so just annotate the first measure's timeSignature if it doesn't have one and there's one in the score

- annotate measures with timeSignature if one wasn't parsed
	- use beats in measure over 4 as default

- if i'm going to output my own midi
	MICROSECONDS_PER_MINUTE = 60000000
	BPM = MICROSECONDS_PER_MINUTE / MPQN
	MPQN = MICROSECONDS_PER_MINUTE / BPM

	128 velocity is max volume

- midi output
	- calculate and hardcode volume levels in score for crescendos/decrescendos
		- determine number of beats between start and stop. set perBeatAdjustment, and the further divide the perBeatAdjustment by the amount of notes in the beat to get the perNoteAdjustment

- ui
	- oh boy. i thought about how helpful it'd be to have a tool that allowed me to view/edit a score, and play back a measure at a time, or more easily start at a certain measure rather than having to fast-forward through wav files.
	- timidity can read midi from stdin, so as long as i can find a good way to cut out certain measures of music before sending it to mercussion, we're in business
	- maybe i should start looking at the ncurses controls python has

	- what if i just had some way of playing every time i saved? 

IN PROGRESS

- what about r/l as modifiers. you don't have to use them all the time. they just tell the alternator what to start with or when to override alternating
	- not a bad idea
	- snare should probably move from h to abcde and so-on: center, midway, edge, rim
	- b and r for "right backstick"
	- 1 p; 2 mp; 3 mf; 4 f; 5 ff

- thought of using numbers for dynamic levels, freeing up f for a spock surface, but then there's the idea of using numbers to denote surfaces so i can specify r/l more directly


DONE:

- push unison to 5 notes into non-VDL midi convertor
	- vdl should get 1 unison note

- push sticking to lilypond output
- musicxml: title, author, copyright
- explicit \break every 4 measures
- proper clef on percussion staves
- so i think dividing the beat into notes and then sticking is a good idea, but what you only want to specify sticking for 2 out of 6 notes in the sticking: the last two notes? period spacers? 
- convert unisons to simultaneous notes
- no more passing filenames ... read input as if from keyboard and print output
	- so on unix or windows one should use input/output redirection
- tuplets
	- annotate in logic that sets durations
	- set tuplet=True in durations != (1,2,%4=0)
	- in lilypond output, just look for change in tuplet flag for whether to start/end tuplet
		- but there may be two triplets in a row, and we need to know when to stop one and start the other
	- guess we have to detect how many notes should be in the triplet based on the duration and set start/stop flags
	- the rest condensing i'm doing makes tuples less straight-forward
- make sure flam element has the correct surface for snare shots, and other
- pan: basses spread from right to left; snares center?; tenors right?
- update lilypond output to work with multiple surfaces
- lilypond time signature
- tuplet flags are so much more sane now
- crescendos and decrescendos
- simultaneous notes become condensed in the surface string, rather than an array of other notes
	- because there's no need to allow simultaneous notes to have different dynamic settings (not possible on sheet music)
	- make lilypond output understand this

        - starting and stopping points attached to notes
	- don't need a dynamic to start a descrescendo/crescendo, but when in progress, a dynamic specifier STOPS it
	- but what if a cresc stops and a decre begins on the same note?
- ability to specify the number of basses for unison expansion
	- you can, with the basses score detail. just pass the number, 2-6
- parse tenor shots
- output shots for lilypond
- comments should start with # and not ;, since : denotes sticking, might mistype ; for :
- ability to insert a beat of rests before tapoff when compiling for midi output ... some players mess up when the notes start so soon
	- if i do my own midi output, this might be quite easy to do
	- solution was to start at midi time of 30, rather than 0
- parse simultaneous notes
- flags for which instruments to output (instead of all by default)
	- like this: --instrument snare,tenor
- use YAML for most of the parsing ... the only thing i want to worry about is parsing the music notation


Bah

- flag for whether to expand tremolos, etc
	- needed for lilypond's midi output

Questions:

- deduce whether a note should be dotted automatically as a compiler optimization?

- how should i handle flams on tenors? new character?
	- do i condense the two notes following a comma into 1 note, with a flam flag, and a grace surface specifier?
